AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation template to create an EC2 instance

Parameters:
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t3.micro
    AllowedValues: [t3.micro, t3.small, t2.medium, t2.large, m4.large]

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  VPCId:
    Description: The ID of your existing VPC
    Type: AWS::EC2::VPC::Id

  Ipv6SubnetId:
    Description: The ID of your existing IPv6 Subnet
    Type: AWS::EC2::Subnet::Id

  DualStackSubnetId:
    Description: The ID of your existing Dual stack Subnet
    Type: AWS::EC2::Subnet::Id

  DualStackIpv6Address:
    Description: IPv6 Address to us in the dual stack network
    Type: String

  DualStackIpv4Address:
    Description: IPv4 Address to us in the dual stack network
    Type: String

  AmiImageId:
    Description: The ID of the AMI to launch
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'

Resources:
  leshanEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName      
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref leshanSecurityGroup
          Ipv6Addresses:
            - !Ref DualStackIpv6Address
          PrivateIpAddresses:
            - !Ref DualStackIpv4Address
          SubnetId: !Ref DualStackSubnetId
      PrivateDnsNameOptions:
        HostnameType: resource-name
        EnableResourceNameDnsAAAARecord: true
      UserData:
        Fn::Base64: |
          #cloud-config

  leshanSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP, HTTPS and CoAP access from any location
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIpv6: "::/0"
        - IpProtocol: 58 # ICMPv6
          FromPort: -1
          ToPort: -1
          CidrIpv6: "::/0"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: "::/0"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: "::/0"
        - IpProtocol: udp
          FromPort: 5683
          ToPort: 5683
          CidrIpv6: "::/0"
        - IpProtocol: udp
          FromPort: 5684
          ToPort: 5684
          CidrIpv6: "::/0"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 5683
          ToPort: 5683
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 5684
          ToPort: 5684
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIpv6: "::/0"
          IpProtocol: -1
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
